/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@layer properties {
	@supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
		((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
		*,
		:before,
		:after,
		::backdrop {
			--tw-space-y-reverse: 0;
			--tw-gradient-position: initial;
			--tw-gradient-from: #0000;
			--tw-gradient-via: #0000;
			--tw-gradient-to: #0000;
			--tw-gradient-stops: initial;
			--tw-gradient-via-stops: initial;
			--tw-gradient-from-position: 0%;
			--tw-gradient-via-position: 50%;
			--tw-gradient-to-position: 100%;
			--tw-font-weight: initial;
			--tw-shadow: 0 0 #0000;
			--tw-shadow-color: initial;
			--tw-shadow-alpha: 100%;
			--tw-inset-shadow: 0 0 #0000;
			--tw-inset-shadow-color: initial;
			--tw-inset-shadow-alpha: 100%;
			--tw-ring-color: initial;
			--tw-ring-shadow: 0 0 #0000;
			--tw-inset-ring-color: initial;
			--tw-inset-ring-shadow: 0 0 #0000;
			--tw-ring-inset: initial;
			--tw-ring-offset-width: 0px;
			--tw-ring-offset-color: #fff;
			--tw-ring-offset-shadow: 0 0 #0000;
			--tw-blur: initial;
			--tw-brightness: initial;
			--tw-contrast: initial;
			--tw-grayscale: initial;
			--tw-hue-rotate: initial;
			--tw-invert: initial;
			--tw-opacity: initial;
			--tw-saturate: initial;
			--tw-sepia: initial;
			--tw-drop-shadow: initial;
			--tw-drop-shadow-color: initial;
			--tw-drop-shadow-alpha: 100%;
			--tw-drop-shadow-size: initial;
			--tw-duration: initial;
			--tw-ease: initial;
			--tw-scale-x: 1;
			--tw-scale-y: 1;
			--tw-scale-z: 1;
		}
	}
}
@layer theme {
	:root,
	:host {
		--font-sans:
			ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
			'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
		--font-mono:
			ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
			'Liberation Mono', 'Courier New', monospace;
		--color-red-100: oklch(93.6% 0.032 17.717);
		--color-red-500: oklch(63.7% 0.237 25.331);
		--color-red-600: oklch(57.7% 0.245 27.325);
		--color-red-700: oklch(50.5% 0.213 27.518);
		--color-red-800: oklch(44.4% 0.177 26.899);
		--color-red-900: oklch(39.6% 0.141 25.723);
		--color-amber-300: oklch(87.9% 0.169 91.605);
		--color-amber-400: oklch(82.8% 0.189 84.429);
		--color-amber-600: oklch(66.6% 0.179 58.318);
		--color-green-100: oklch(96.2% 0.044 156.743);
		--color-green-200: oklch(92.5% 0.084 155.995);
		--color-green-300: oklch(87.1% 0.15 154.449);
		--color-green-400: oklch(79.2% 0.209 151.711);
		--color-green-500: oklch(72.3% 0.219 149.579);
		--color-green-600: oklch(62.7% 0.194 149.214);
		--color-green-700: oklch(52.7% 0.154 150.069);
		--color-green-800: oklch(44.8% 0.119 151.328);
		--color-green-900: oklch(39.3% 0.095 152.535);
		--color-emerald-500: oklch(69.6% 0.17 162.48);
		--color-blue-100: oklch(93.2% 0.032 255.585);
		--color-blue-200: oklch(88.2% 0.059 254.128);
		--color-blue-300: oklch(80.9% 0.105 251.813);
		--color-blue-400: oklch(70.7% 0.165 254.624);
		--color-blue-500: oklch(62.3% 0.214 259.815);
		--color-blue-600: oklch(54.6% 0.245 262.881);
		--color-blue-700: oklch(48.8% 0.243 264.376);
		--color-blue-800: oklch(42.4% 0.199 265.638);
		--color-blue-900: oklch(37.9% 0.146 265.522);
		--color-gray-300: oklch(87.2% 0.01 258.338);
		--color-gray-400: oklch(70.7% 0.022 261.325);
		--color-gray-600: oklch(44.6% 0.03 256.802);
		--color-gray-700: oklch(37.3% 0.034 259.733);
		--color-gray-800: oklch(27.8% 0.033 256.848);
		--color-gray-900: oklch(21% 0.034 264.665);
		--color-black: #000;
		--color-white: #fff;
		--spacing: 0.25rem;
		--container-2xl: 42rem;
		--container-4xl: 56rem;
		--text-lg: 1.125rem;
		--text-lg--line-height: calc(1.75 / 1.125);
		--text-xl: 1.25rem;
		--text-xl--line-height: calc(1.75 / 1.25);
		--text-2xl: 1.5rem;
		--text-2xl--line-height: calc(2 / 1.5);
		--text-3xl: 1.875rem;
		--text-3xl--line-height: 1.2;
		--text-4xl: 2.25rem;
		--text-4xl--line-height: calc(2.5 / 2.25);
		--font-weight-medium: 500;
		--font-weight-semibold: 600;
		--font-weight-bold: 700;
		--radius-sm: 0.25rem;
		--radius-md: 0.375rem;
		--radius-lg: 0.5rem;
		--radius-2xl: 1rem;
		--radius-3xl: 1.5rem;
		--ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
		--default-transition-duration: 0.15s;
		--default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		--default-font-family: var(--font-sans);
		--default-mono-font-family: var(--font-mono);
		--color-primary: oklch(91% 0.1 128.12);
	}
}
@layer base {
	*,
	:after,
	:before,
	::backdrop {
		box-sizing: border-box;
		border: 0 solid;
		margin: 0;
		padding: 0;
	}
	::file-selector-button {
		box-sizing: border-box;
		border: 0 solid;
		margin: 0;
		padding: 0;
	}
	html,
	:host {
		-webkit-text-size-adjust: 100%;
		-moz-tab-size: 4;
		tab-size: 4;
		line-height: 1.5;
		font-family: var(
			--default-font-family,
			ui-sans-serif,
			system-ui,
			sans-serif,
			'Apple Color Emoji',
			'Segoe UI Emoji',
			'Segoe UI Symbol',
			'Noto Color Emoji'
		);
		font-feature-settings: var(--default-font-feature-settings, normal);
		font-variation-settings: var(--default-font-variation-settings, normal);
		-webkit-tap-highlight-color: transparent;
	}
	hr {
		height: 0;
		color: inherit;
		border-top-width: 1px;
	}
	abbr:where([title]) {
		-webkit-text-decoration: underline dotted;
		text-decoration: underline dotted;
	}
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		font-size: inherit;
		font-weight: inherit;
	}
	a {
		color: inherit;
		-webkit-text-decoration: inherit;
		text-decoration: inherit;
	}
	b,
	strong {
		font-weight: bolder;
	}
	code,
	kbd,
	samp,
	pre {
		font-family: var(
			--default-mono-font-family,
			ui-monospace,
			SFMono-Regular,
			Menlo,
			Monaco,
			Consolas,
			'Liberation Mono',
			'Courier New',
			monospace
		);
		font-feature-settings: var(
			--default-mono-font-feature-settings,
			normal
		);
		font-variation-settings: var(
			--default-mono-font-variation-settings,
			normal
		);
		font-size: 1em;
	}
	small {
		font-size: 80%;
	}
	sub,
	sup {
		vertical-align: baseline;
		font-size: 75%;
		line-height: 0;
		position: relative;
	}
	sub {
		bottom: -0.25em;
	}
	sup {
		top: -0.5em;
	}
	table {
		text-indent: 0;
		border-color: inherit;
		border-collapse: collapse;
	}
	:-moz-focusring {
		outline: auto;
	}
	progress {
		vertical-align: baseline;
	}
	summary {
		display: list-item;
	}
	ol,
	ul,
	menu {
		list-style: none;
	}
	img,
	svg,
	video,
	canvas,
	audio,
	iframe,
	embed,
	object {
		vertical-align: middle;
		display: block;
	}
	img,
	video {
		max-width: 100%;
		height: auto;
	}
	button,
	input,
	select,
	optgroup,
	textarea {
		font: inherit;
		font-feature-settings: inherit;
		font-variation-settings: inherit;
		letter-spacing: inherit;
		color: inherit;
		opacity: 1;
		background-color: #0000;
		border-radius: 0;
	}
	::file-selector-button {
		font: inherit;
		font-feature-settings: inherit;
		font-variation-settings: inherit;
		letter-spacing: inherit;
		color: inherit;
		opacity: 1;
		background-color: #0000;
		border-radius: 0;
	}
	:where(select:is([multiple], [size])) optgroup {
		font-weight: bolder;
	}
	:where(select:is([multiple], [size])) optgroup option {
		padding-inline-start: 20px;
	}
	::file-selector-button {
		margin-inline-end: 4px;
	}
	::placeholder {
		opacity: 1;
	}
	@supports (not ((-webkit-appearance: -apple-pay-button))) or
		(contain-intrinsic-size: 1px) {
		::placeholder {
			color: currentColor;
		}
		@supports (color: color-mix(in lab, red, red)) {
			::placeholder {
				color: color-mix(in oklab, currentcolor 50%, transparent);
			}
		}
	}
	textarea {
		resize: vertical;
	}
	::-webkit-search-decoration {
		-webkit-appearance: none;
	}
	::-webkit-date-and-time-value {
		min-height: 1lh;
		text-align: inherit;
	}
	::-webkit-datetime-edit {
		display: inline-flex;
	}
	::-webkit-datetime-edit-fields-wrapper {
		padding: 0;
	}
	::-webkit-datetime-edit {
		padding-block: 0;
	}
	::-webkit-datetime-edit-year-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-month-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-day-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-hour-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-minute-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-second-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-millisecond-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-meridiem-field {
		padding-block: 0;
	}
	:-moz-ui-invalid {
		box-shadow: none;
	}
	button,
	input:where([type='button'], [type='reset'], [type='submit']) {
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	::file-selector-button {
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	::-webkit-inner-spin-button {
		height: auto;
	}
	::-webkit-outer-spin-button {
		height: auto;
	}
	[hidden]:where(:not([hidden='until-found'])) {
		display: none !important;
	}
}
@layer components;
@layer utilities {
	.absolute {
		position: absolute;
	}
	.relative {
		position: relative;
	}
	.inset-0 {
		inset: calc(var(--spacing) * 0);
	}
	.bottom-4 {
		bottom: calc(var(--spacing) * 4);
	}
	.left-4 {
		left: calc(var(--spacing) * 4);
	}
	.container {
		width: 100%;
	}
	@media (min-width: 40rem) {
		.container {
			max-width: 40rem;
		}
	}
	@media (min-width: 48rem) {
		.container {
			max-width: 48rem;
		}
	}
	@media (min-width: 64rem) {
		.container {
			max-width: 64rem;
		}
	}
	@media (min-width: 80rem) {
		.container {
			max-width: 80rem;
		}
	}
	@media (min-width: 96rem) {
		.container {
			max-width: 96rem;
		}
	}
	.mx-auto {
		margin-inline: auto;
	}
	.my-4 {
		margin-block: calc(var(--spacing) * 4);
	}
	.mt-0 {
		margin-top: calc(var(--spacing) * 0);
	}
	.mt-12 {
		margin-top: calc(var(--spacing) * 12);
	}
	.mb-2 {
		margin-bottom: calc(var(--spacing) * 2);
	}
	.mb-4 {
		margin-bottom: calc(var(--spacing) * 4);
	}
	.mb-8 {
		margin-bottom: calc(var(--spacing) * 8);
	}
	.block {
		display: block;
	}
	.contents {
		display: contents;
	}
	.flex {
		display: flex;
	}
	.grid {
		display: grid;
	}
	.hidden {
		display: none;
	}
	.inline-flex {
		display: inline-flex;
	}
	.size-12 {
		width: calc(var(--spacing) * 12);
		height: calc(var(--spacing) * 12);
	}
	.h-20 {
		height: calc(var(--spacing) * 20);
	}
	.h-auto {
		height: auto;
	}
	.min-h-screen {
		min-height: 100vh;
	}
	.w-full {
		width: 100%;
	}
	.max-w-2xl {
		max-width: var(--container-2xl);
	}
	.max-w-4xl {
		max-width: var(--container-4xl);
	}
	.max-w-40 {
		max-width: calc(var(--spacing) * 40);
	}
	.cursor-pointer {
		cursor: pointer;
	}
	.grid-cols-2 {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}
	.flex-col {
		flex-direction: column;
	}
	.flex-wrap {
		flex-wrap: wrap;
	}
	.items-center {
		align-items: center;
	}
	.justify-around {
		justify-content: space-around;
	}
	.justify-center {
		justify-content: center;
	}
	.gap-2 {
		gap: calc(var(--spacing) * 2);
	}
	.gap-6 {
		gap: calc(var(--spacing) * 6);
	}
	:where(.space-y-4 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-block-start: calc(
			calc(var(--spacing) * 4) * var(--tw-space-y-reverse)
		);
		margin-block-end: calc(
			calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse))
		);
	}
	:where(.space-y-8 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-block-start: calc(
			calc(var(--spacing) * 8) * var(--tw-space-y-reverse)
		);
		margin-block-end: calc(
			calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse))
		);
	}
	.overflow-hidden {
		overflow: hidden;
	}
	.rounded {
		border-radius: 0.25rem;
	}
	.rounded-2xl {
		border-radius: var(--radius-2xl);
	}
	.rounded-3xl {
		border-radius: var(--radius-3xl);
	}
	.rounded-lg {
		border-radius: var(--radius-lg);
	}
	.rounded-md {
		border-radius: var(--radius-md);
	}
	.rounded-sm {
		border-radius: var(--radius-sm);
	}
	.bg-amber-400 {
		background-color: var(--color-amber-400);
	}
	.bg-amber-600 {
		background-color: var(--color-amber-600);
	}
	.bg-blue-100 {
		background-color: var(--color-blue-100);
	}
	.bg-blue-200 {
		background-color: var(--color-blue-200);
	}
	.bg-blue-300 {
		background-color: var(--color-blue-300);
	}
	.bg-blue-400 {
		background-color: var(--color-blue-400);
	}
	.bg-blue-500 {
		background-color: var(--color-blue-500);
	}
	.bg-blue-600 {
		background-color: var(--color-blue-600);
	}
	.bg-blue-700 {
		background-color: var(--color-blue-700);
	}
	.bg-blue-800 {
		background-color: var(--color-blue-800);
	}
	.bg-blue-900 {
		background-color: var(--color-blue-900);
	}
	.bg-emerald-500 {
		background-color: var(--color-emerald-500);
	}
	.bg-gray-700 {
		background-color: var(--color-gray-700);
	}
	.bg-gray-800 {
		background-color: var(--color-gray-800);
	}
	.bg-green-100 {
		background-color: var(--color-green-100);
	}
	.bg-green-200 {
		background-color: var(--color-green-200);
	}
	.bg-green-300 {
		background-color: var(--color-green-300);
	}
	.bg-green-400 {
		background-color: var(--color-green-400);
	}
	.bg-green-500 {
		background-color: var(--color-green-500);
	}
	.bg-green-600 {
		background-color: var(--color-green-600);
	}
	.bg-green-700 {
		background-color: var(--color-green-700);
	}
	.bg-green-800 {
		background-color: var(--color-green-800);
	}
	.bg-green-900 {
		background-color: var(--color-green-900);
	}
	.bg-primary {
		background-color: var(--color-primary);
	}
	.bg-red-100 {
		background-color: var(--color-red-100);
	}
	.bg-red-500 {
		background-color: var(--color-red-500);
	}
	.bg-red-600 {
		background-color: var(--color-red-600);
	}
	.bg-red-700 {
		background-color: var(--color-red-700);
	}
	.bg-red-800 {
		background-color: var(--color-red-800);
	}
	.bg-red-900 {
		background-color: var(--color-red-900);
	}
	.bg-gradient-to-b {
		--tw-gradient-position: to bottom in oklab;
		background-image: linear-gradient(var(--tw-gradient-stops));
	}
	.bg-gradient-to-t {
		--tw-gradient-position: to top in oklab;
		background-image: linear-gradient(var(--tw-gradient-stops));
	}
	.from-black {
		--tw-gradient-from: var(--color-black);
		--tw-gradient-stops: var(
			--tw-gradient-via-stops,
			var(--tw-gradient-position),
			var(--tw-gradient-from) var(--tw-gradient-from-position),
			var(--tw-gradient-to) var(--tw-gradient-to-position)
		);
	}
	.from-black\/50 {
		--tw-gradient-from: #00000080;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.from-black\/50 {
			--tw-gradient-from: color-mix(
				in oklab,
				var(--color-black) 50%,
				transparent
			);
		}
	}
	.from-black\/50 {
		--tw-gradient-stops: var(
			--tw-gradient-via-stops,
			var(--tw-gradient-position),
			var(--tw-gradient-from) var(--tw-gradient-from-position),
			var(--tw-gradient-to) var(--tw-gradient-to-position)
		);
	}
	.from-gray-900 {
		--tw-gradient-from: var(--color-gray-900);
		--tw-gradient-stops: var(
			--tw-gradient-via-stops,
			var(--tw-gradient-position),
			var(--tw-gradient-from) var(--tw-gradient-from-position),
			var(--tw-gradient-to) var(--tw-gradient-to-position)
		);
	}
	.to-gray-800 {
		--tw-gradient-to: var(--color-gray-800);
		--tw-gradient-stops: var(
			--tw-gradient-via-stops,
			var(--tw-gradient-position),
			var(--tw-gradient-from) var(--tw-gradient-from-position),
			var(--tw-gradient-to) var(--tw-gradient-to-position)
		);
	}
	.to-transparent {
		--tw-gradient-to: transparent;
		--tw-gradient-stops: var(
			--tw-gradient-via-stops,
			var(--tw-gradient-position),
			var(--tw-gradient-from) var(--tw-gradient-from-position),
			var(--tw-gradient-to) var(--tw-gradient-to-position)
		);
	}
	.p-2 {
		padding: calc(var(--spacing) * 2);
	}
	.p-4 {
		padding: calc(var(--spacing) * 4);
	}
	.px-4 {
		padding-inline: calc(var(--spacing) * 4);
	}
	.py-8 {
		padding-block: calc(var(--spacing) * 8);
	}
	.text-center {
		text-align: center;
	}
	.text-2xl {
		font-size: var(--text-2xl);
		line-height: var(--tw-leading, var(--text-2xl--line-height));
	}
	.text-3xl {
		font-size: var(--text-3xl);
		line-height: var(--tw-leading, var(--text-3xl--line-height));
	}
	.text-4xl {
		font-size: var(--text-4xl);
		line-height: var(--tw-leading, var(--text-4xl--line-height));
	}
	.text-lg {
		font-size: var(--text-lg);
		line-height: var(--tw-leading, var(--text-lg--line-height));
	}
	.text-xl {
		font-size: var(--text-xl);
		line-height: var(--tw-leading, var(--text-xl--line-height));
	}
	.font-bold {
		--tw-font-weight: var(--font-weight-bold);
		font-weight: var(--font-weight-bold);
	}
	.font-medium {
		--tw-font-weight: var(--font-weight-medium);
		font-weight: var(--font-weight-medium);
	}
	.font-semibold {
		--tw-font-weight: var(--font-weight-semibold);
		font-weight: var(--font-weight-semibold);
	}
	.text-gray-300 {
		color: var(--color-gray-300);
	}
	.text-gray-400 {
		color: var(--color-gray-400);
	}
	.text-red-500 {
		color: var(--color-red-500);
	}
	.text-white {
		color: var(--color-white);
	}
	.opacity-0 {
		opacity: 0;
	}
	.shadow-2xl {
		--tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
		box-shadow:
			var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
			var(--tw-shadow);
	}
	.shadow-xl {
		--tw-shadow:
			0 20px 25px -5px var(--tw-shadow-color, #0000001a),
			0 8px 10px -6px var(--tw-shadow-color, #0000001a);
		box-shadow:
			var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
			var(--tw-shadow);
	}
	.saturate-0 {
		--tw-saturate: saturate(0%);
		filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
			var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
			var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
	}
	.filter {
		filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
			var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
			var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
	}
	.transition {
		transition-property:
			color,
			background-color,
			border-color,
			outline-color,
			text-decoration-color,
			fill,
			stroke,
			--tw-gradient-from,
			--tw-gradient-via,
			--tw-gradient-to,
			opacity,
			box-shadow,
			transform,
			translate,
			scale,
			rotate,
			filter,
			-webkit-backdrop-filter,
			backdrop-filter,
			display,
			visibility,
			content-visibility,
			overlay,
			pointer-events;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(
			--tw-duration,
			var(--default-transition-duration)
		);
	}
	.transition-all {
		transition-property: all;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(
			--tw-duration,
			var(--default-transition-duration)
		);
	}
	.transition-colors {
		transition-property:
			color, background-color, border-color, outline-color,
			text-decoration-color, fill, stroke, --tw-gradient-from,
			--tw-gradient-via, --tw-gradient-to;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(
			--tw-duration,
			var(--default-transition-duration)
		);
	}
	.transition-opacity {
		transition-property: opacity;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(
			--tw-duration,
			var(--default-transition-duration)
		);
	}
	.transition-transform {
		transition-property: transform, translate, scale, rotate;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(
			--tw-duration,
			var(--default-transition-duration)
		);
	}
	.duration-300 {
		--tw-duration: 0.3s;
		transition-duration: 0.3s;
	}
	.duration-1000 {
		--tw-duration: 1s;
		transition-duration: 1s;
	}
	.ease-in-out {
		--tw-ease: var(--ease-in-out);
		transition-timing-function: var(--ease-in-out);
	}
	@media (hover: hover) {
		.group-hover\:scale-105:is(:where(.group):hover *) {
			--tw-scale-x: 105%;
			--tw-scale-y: 105%;
			--tw-scale-z: 105%;
			scale: var(--tw-scale-x) var(--tw-scale-y);
		}
		.group-hover\:opacity-100:is(:where(.group):hover *) {
			opacity: 1;
		}
		.hover\:bg-amber-300:hover {
			background-color: var(--color-amber-300);
		}
		.hover\:bg-gray-600:hover {
			background-color: var(--color-gray-600);
		}
		.hover\:saturate-100:hover {
			--tw-saturate: saturate(100%);
			filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
				var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
				var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
		}
	}
	@media (min-width: 48rem) {
		.md\:grid-cols-3 {
			grid-template-columns: repeat(3, minmax(0, 1fr));
		}
	}
	@media (min-width: 64rem) {
		.lg\:grid-cols-4 {
			grid-template-columns: repeat(4, minmax(0, 1fr));
		}
		.lg\:gap-4 {
			gap: calc(var(--spacing) * 4);
		}
		.lg\:p-6 {
			padding: calc(var(--spacing) * 6);
		}
	}
}
:root {
	color-scheme: light dark;
	color: #ffffffde;
	font-synthesis: none;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	background-color: #242424;
	font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
	font-weight: 400;
	line-height: 1.5;
}
a {
	color: #646cff;
	-webkit-text-decoration: inherit;
	text-decoration: inherit;
	font-weight: 500;
}
a:hover {
	color: #535bf2;
}
body {
	place-items: center;
	min-width: 320px;
	min-height: 100vh;
	margin: 0;
	display: flex;
}
h1 {
	font-size: 3.2em;
	line-height: 1.1;
}
button {
	cursor: pointer;
	background-color: #1a1a1a;
	border: 1px solid #0000;
	border-radius: 8px;
	padding: 0.6em 1.2em;
	font-family: inherit;
	font-size: 1em;
	font-weight: 500;
	transition: border-color 0.25s;
}
button:hover {
	border-color: #646cff;
}
button:focus,
button:focus-visible {
	outline: 4px auto -webkit-focus-ring-color;
}
.card {
	padding: 2em;
}
#app {
	text-align: center;
	max-width: 1280px;
	margin: 0 auto;
}
@media (prefers-color-scheme: light) {
	:root {
		color: #213547;
		background-color: #fff;
	}
	a:hover {
		color: #747bff;
	}
	button {
		background-color: #f9f9f9;
	}
}
@property --tw-space-y-reverse {
	syntax: '*';
	inherits: false;
	initial-value: 0;
}
@property --tw-gradient-position {
	syntax: '*';
	inherits: false;
}
@property --tw-gradient-from {
	syntax: '<color>';
	inherits: false;
	initial-value: #0000;
}
@property --tw-gradient-via {
	syntax: '<color>';
	inherits: false;
	initial-value: #0000;
}
@property --tw-gradient-to {
	syntax: '<color>';
	inherits: false;
	initial-value: #0000;
}
@property --tw-gradient-stops {
	syntax: '*';
	inherits: false;
}
@property --tw-gradient-via-stops {
	syntax: '*';
	inherits: false;
}
@property --tw-gradient-from-position {
	syntax: '<length-percentage>';
	inherits: false;
	initial-value: 0%;
}
@property --tw-gradient-via-position {
	syntax: '<length-percentage>';
	inherits: false;
	initial-value: 50%;
}
@property --tw-gradient-to-position {
	syntax: '<length-percentage>';
	inherits: false;
	initial-value: 100%;
}
@property --tw-font-weight {
	syntax: '*';
	inherits: false;
}
@property --tw-shadow {
	syntax: '*';
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
	syntax: '*';
	inherits: false;
}
@property --tw-shadow-alpha {
	syntax: '<percentage>';
	inherits: false;
	initial-value: 100%;
}
@property --tw-inset-shadow {
	syntax: '*';
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
	syntax: '*';
	inherits: false;
}
@property --tw-inset-shadow-alpha {
	syntax: '<percentage>';
	inherits: false;
	initial-value: 100%;
}
@property --tw-ring-color {
	syntax: '*';
	inherits: false;
}
@property --tw-ring-shadow {
	syntax: '*';
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
	syntax: '*';
	inherits: false;
}
@property --tw-inset-ring-shadow {
	syntax: '*';
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
	syntax: '*';
	inherits: false;
}
@property --tw-ring-offset-width {
	syntax: '<length>';
	inherits: false;
	initial-value: 0;
}
@property --tw-ring-offset-color {
	syntax: '*';
	inherits: false;
	initial-value: #fff;
}
@property --tw-ring-offset-shadow {
	syntax: '*';
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-blur {
	syntax: '*';
	inherits: false;
}
@property --tw-brightness {
	syntax: '*';
	inherits: false;
}
@property --tw-contrast {
	syntax: '*';
	inherits: false;
}
@property --tw-grayscale {
	syntax: '*';
	inherits: false;
}
@property --tw-hue-rotate {
	syntax: '*';
	inherits: false;
}
@property --tw-invert {
	syntax: '*';
	inherits: false;
}
@property --tw-opacity {
	syntax: '*';
	inherits: false;
}
@property --tw-saturate {
	syntax: '*';
	inherits: false;
}
@property --tw-sepia {
	syntax: '*';
	inherits: false;
}
@property --tw-drop-shadow {
	syntax: '*';
	inherits: false;
}
@property --tw-drop-shadow-color {
	syntax: '*';
	inherits: false;
}
@property --tw-drop-shadow-alpha {
	syntax: '<percentage>';
	inherits: false;
	initial-value: 100%;
}
@property --tw-drop-shadow-size {
	syntax: '*';
	inherits: false;
}
@property --tw-duration {
	syntax: '*';
	inherits: false;
}
@property --tw-ease {
	syntax: '*';
	inherits: false;
}
@property --tw-scale-x {
	syntax: '*';
	inherits: false;
	initial-value: 1;
}
@property --tw-scale-y {
	syntax: '*';
	inherits: false;
	initial-value: 1;
}
@property --tw-scale-z {
	syntax: '*';
	inherits: false;
	initial-value: 1;
}
